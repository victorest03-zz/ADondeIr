@using System.Web.Optimization
@model ADondeIr.Model.Producto
<link href="~/Content/plugins/Boostrap-fileinput/css/fileinput.min.css" rel="stylesheet" />
<link href="~/Content/plugins/summernote/summernote.css" rel="stylesheet" />
<div class="modal fade" id="modalProductoMant" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">@(Model.pkProducto != 0 ? "Modificar" : "Registrar") Datos de Producto</h4>
            </div>
            @using (Ajax.BeginForm("Mantenimiento", "Producto", null, new AjaxOptions() { OnSuccess = "OnSuccessProducto", OnFailure = "OnFailureProducto", Confirm = "Esta Seguro?", LoadingElementId = "Loading" }, new { id = "frmProductoMant", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.pkProducto)
                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.fkEmpresa, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.fkEmpresa, new SelectList(ViewBag.listEmpresa, "pkEmpresa", "cEmpresa"), "--Seleccione Empresa--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.fkEmpresa, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.cProducto)
                            @Html.EditorFor(model => model.cProducto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cProducto, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.fkTipoActividad, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.fkTipoActividad, new SelectList(ViewBag.listTipoActividades, "pkTipoActividad", "cTipoActividad"), "--Seleccione Tipo de Actividad--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.fkTipoActividad, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.fkDistrito, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.fkDistrito, new SelectList(ViewBag.listDistrito, "pkDistrito", "cDistrito"), "--Seleccione Distrito--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.fkDistrito, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-8">
                            @Html.LabelFor(model => model.cTags)
                            @Html.EditorFor(model => model.cTags, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cTags, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.dPrecio)
                            @Html.EditorFor(model => model.dPrecio, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.dPrecio, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-12">
                            <label class="control-label">Foto Producto</label>
                            <input type="file" accept="image/*" id="foto" name="foto" @(!string.IsNullOrWhiteSpace(Model.FotoPrincipal?.cFileName) ? "data-preimagen = " + Model.FotoPrincipal?.cFileName : "") />
                            @Html.ValidationMessage("ProductoImagen_Error", new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.cObservacionPrincipal, new { @class = "control-label" })
                            @Html.EditorFor(model => model.cObservacionPrincipal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cObservacionPrincipal, null, new { @class = "label label-danger" })
                        </div>
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.cObservacionGeneral, new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.cObservacionGeneral, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.cObservacionGeneral, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary pull-right" id="btnGuardar">Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

@Scripts.Render("~/Scripts/Validation")
<script src="~/Content/plugins/select2/js/select2.js"></script>
<script src="~/Content/plugins/Boostrap-fileinput/fileinput.min.js"></script>
<script src="~/Content/plugins/summernote/summernote.js"></script>
<script src="~/Content/plugins/summernote/lang/summernote-es-ES.js"></script>
<script src="~/Content/js/Producto/_Mantenimiento.min.js?v=@DateTime.Now.Ticks.ToString()"></script>